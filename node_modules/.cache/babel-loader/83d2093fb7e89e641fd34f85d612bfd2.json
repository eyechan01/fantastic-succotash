{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js\";\nimport React from 'react';\nimport { Card } from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nclass Blackjack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deal = () => {\n      let random = Math.floor(Math.random() * 52);\n      let card = {\n        suit: this.state.suits[random % 4],\n        number: this.state.values[random % 13]\n      };\n      const deck = this.state.deck.slice().concat(card);\n      this.setState({\n        deck\n      });\n\n      if (random % 13 < 9) {\n        this.setState({\n          score: this.state.score + random % 13 + 1\n        });\n      } else {\n        this.setState({\n          score: this.state.score + 10\n        });\n      }\n    };\n\n    this.playCPU = () => {\n      let random1 = Math.floor(Math.random() * 52);\n      let random2 = Math.floor(Math.random() * 52);\n      const deck = this.state.deck.slice().concat({\n        suit: this.state.suits[random1 % 4],\n        number: this.state.values[random1 % 13]\n      }, {\n        suit: this.state.suits[random2 % 4],\n        number: this.state.values[random2 % 13]\n      });\n      this.setState({\n        CPU: deck\n      });\n\n      if (random1 % 13 < 9) {\n        this.setState({\n          CPUscore: this.state.score + random1 % 13 + 1\n        });\n      } else {\n        this.setState({\n          CPUscore: this.state.score + 10\n        });\n      }\n\n      if (random2 % 13 < 9) {\n        this.setState({\n          CPUscore: this.state.score + random2 % 13 + 1\n        });\n      } else {\n        this.setState({\n          CPUscore: this.state.score + 10\n        });\n      }\n\n      console.log(this.state.CPUscore);\n    };\n\n    this.reset = () => {\n      this.setState({\n        deck: [],\n        CPU: [],\n        score: 0\n      });\n    };\n\n    this.state = {\n      suits: [club, diamond, heart, spade],\n      values: [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\"],\n      deck: [],\n      CPU: [],\n      score: 0,\n      CPUscore: 0\n    };\n  }\n\n  render() {\n    const deck = this.state.deck.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }));\n    });\n    const CPU = this.state.CPU.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }));\n    });\n    let score = this.state.score;\n\n    if (score == 21) {\n      score = \"Blackjack!\";\n    }\n\n    if (score > 21) {\n      score = \"You Lose!\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, deck, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, \"Hit!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Start over!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => {\n        this.playCPU();\n        this.playCPU();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"Play CPU!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }), \"Score: \", score, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Go home!\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }), CPU);\n  }\n\n}\n\nexport default Blackjack;","map":{"version":3,"sources":["/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js"],"names":["React","Card","club","diamond","heart","spade","Link","Blackjack","Component","constructor","props","deal","random","Math","floor","card","suit","state","suits","number","values","deck","slice","concat","setState","score","playCPU","random1","random2","CPU","CPUscore","console","log","reset","render","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card} from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nclass Blackjack extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        suits: [club, diamond, heart, spade],\n        values: [\"A\",2,3,4,5,6,7,8,9,10,\"J\",\"Q\",\"K\"],\n        deck: [],\n        CPU: [],\n        score: 0,\n        CPUscore: 0,\n    };\n  }\n\n  deal = () => {\n    let random = Math.floor(Math.random() * 52);\n    let card = {\n        suit: this.state.suits[random % 4],\n        number: this.state.values[random % 13],\n    }\n    const deck = this.state.deck.slice().concat(card)\n    this.setState({deck})\n\n    if(random % 13 < 9) {\n      this.setState({score: this.state.score + random % 13 + 1})\n    }\n    else {\n      this.setState({score: this.state.score + 10})\n    }\n  }\n\n  playCPU = () => {\n    let random1 = Math.floor(Math.random() * 52);\n    let random2 = Math.floor(Math.random() * 52);\n    const deck = this.state.deck.slice().concat(\n      { suit: this.state.suits[random1 % 4], number: this.state.values[random1 % 13] },\n      { suit: this.state.suits[random2 % 4], number: this.state.values[random2 % 13] }\n    )\n    this.setState({CPU: deck})\n\n    if(random1 % 13 < 9) {\n      this.setState({CPUscore: this.state.score + random1 % 13 + 1})\n    }\n    else {\n      this.setState({CPUscore: this.state.score + 10})\n    }\n\n    if(random2 % 13 < 9) {\n      this.setState({CPUscore: this.state.score + random2 % 13 + 1})\n    }\n    else {\n      this.setState({CPUscore: this.state.score + 10})\n    }\n    console.log(this.state.CPUscore)\n  }\n\n  reset = () => {\n    this.setState({deck: [], CPU: [], score: 0})\n  }\n\n  render(){\n    const deck = this.state.deck.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    const CPU = this.state.CPU.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    let score = this.state.score\n    if(score == 21) {\n      score = \"Blackjack!\"\n    }\n    if(score > 21) {\n      score = \"You Lose!\"\n    }\n\n    return(\n        <div>\n            {deck}\n            <br/><br/><br/><br/>\n            <div>\n              <button onClick={this.deal}>Hit!</button>\n              <button onClick={this.reset}>Start over!</button>\n              <button onClick={()=>{ this.playCPU(); this.playCPU(); }}>Play CPU!</button>\n              <br/>\n              Score: {score}\n              <br/>\n              <Link to=\"/\">Go home!</Link>\n            </div>\n            <br/>\n            {CPU}\n        </div>\n\n    );\n  }\n}\n\nexport default Blackjack;\n"]},"metadata":{},"sourceType":"module"}