{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js\";\nimport React from 'react';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nfunction Card(props) {\n  let suitpic = club;\n\n  if (props.suit === \"club\") {\n    suitpic = club;\n  } else if (props.suit === \"diamond\") {\n    suitpic = diamond;\n  } else if (props.suit === \"heart\") {\n    suitpic = heart;\n  } else {\n    suitpic = spade;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"100px\",\n      width: \"50px\",\n      padding: \"50px\",\n      border: \"1px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: suitpic,\n    alt: \"suit\",\n    width: \"40px\",\n    height: \"80px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), props.number);\n}\n\nclass Blackjack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deal = () => {\n      let randomSuit = Math.floor(Math.random() * 4);\n      let randomValue = Math.floor(Math.random() * 13);\n      let card = {\n        suit: this.state.suits[randomSuit],\n        number: this.state.values[randomValue]\n      };\n      const deck = this.state.deck.slice().concat(card);\n      this.setState({\n        deck\n      }, {\n        score: this.state.score + randomValue\n      });\n      console.log(this.state.deck);\n    };\n\n    this.state = {\n      suits: [\"club\", 'diamond', \"heart\", \"spade\"],\n      values: [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"],\n      deck: [{\n        suit: 'club',\n        number: '5'\n      }],\n      score: 0\n    };\n  }\n\n  render() {\n    const deck = this.state.deck.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, deck, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Play!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), \"Score: \", this.state.score, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"Go home!\"));\n  }\n\n}\n\nexport default Blackjack;","map":{"version":3,"sources":["/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js"],"names":["React","club","diamond","heart","spade","Link","Card","props","suitpic","suit","height","width","padding","border","number","Blackjack","Component","constructor","deal","randomSuit","Math","floor","random","randomValue","card","state","suits","values","deck","slice","concat","setState","score","console","log","render","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nfunction Card (props){\n  let suitpic = club\n    if(props.suit === \"club\"){\n      suitpic = club\n    } else if (props.suit === \"diamond\"){\n      suitpic = diamond\n    } else if (props.suit === \"heart\"){\n      suitpic = heart\n    } else {\n      suitpic = spade\n    }\n  return (\n      <div style = {{height: \"100px\", width: \"50px\", padding: \"50px\", border: \"1px solid black\"}}>\n          <img src = {suitpic} alt=\"suit\" width=\"40px\" height=\"80px\"/>\n          {props.number}\n      </div>\n  );}\n\nclass Blackjack extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        suits: [\"club\", 'diamond', \"heart\", \"spade\"],\n        values: [2,3,4,5,6,7,8,9,10,\"J\",\"Q\",\"K\",\"A\"],\n        deck: [{suit: 'club', number: '5'}],\n        score: 0,\n    };\n  }\n\n  deal = () => {\n    let randomSuit = Math.floor(Math.random() * 4);\n    let randomValue = Math.floor(Math.random() * 13);\n    let card = {\n        suit: this.state.suits[randomSuit],\n        number: this.state.values[randomValue],\n    }\n    const deck = this.state.deck.slice().concat(card)\n    this.setState({deck}, {score: this.state.score + randomValue})\n    console.log(this.state.deck)\n  }\n\n  render(){\n    const deck = this.state.deck.map((card, index) =>\n    {\n      return (\n        <div key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </div>\n      );\n    }\n  )\n    return(\n        <div>\n            {deck}\n            <br/>\n            <button onClick={this.deal}>Play!</button>\n            <br/>\n            Score: {this.state.score}\n            <br/><br/>\n            <Link to=\"/\">Go home!</Link>\n        </div>\n\n    );\n  }\n}\n\nexport default Blackjack;\n"]},"metadata":{},"sourceType":"module"}