{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspao/Documents/succotash/fantastic-succotash/src/War.js\";\nimport React from 'react';\nimport { Card } from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\nimport { Button, Alert, Jumbotron } from 'react-bootstrap';\n\nclass War extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deal = () => {\n      let random;\n      let card;\n      let deck = this.state.deck;\n      let CPU = this.state.CPU;\n      let cardsDealt = this.state.cardsDealt;\n\n      for (let i = 0; i < 52; i++) {\n        random = Math.floor(Math.random() * 52);\n\n        while (cardsDealt.includes(random)) {\n          random = Math.floor(Math.random() * 52);\n        }\n\n        card = {\n          suit: this.state.suits[random % 4],\n          number: this.state.values[random % 13]\n        };\n        cardsDealt = cardsDealt.slice().concat(random);\n        this.setState({\n          cardsDealt\n        });\n\n        if (i < 26) {\n          deck = deck.slice().concat(card);\n          this.setState({\n            deck\n          });\n        } else {\n          CPU = CPU.slice().concat(card);\n          this.setState({\n            CPU\n          });\n        }\n      }\n\n      this.setState({\n        dealDisable: true\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        cardsDealt: [],\n        deck: [],\n        CPU: []\n      });\n    };\n\n    this.state = {\n      suits: [club, diamond, heart, spade],\n      values: [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\"],\n      deck: [],\n      CPU: [],\n      cardsDealt: [],\n      dealDisable: false\n    };\n  }\n\n  render() {\n    const deck = this.state.deck.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }));\n    });\n    const CPU = this.state.CPU.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }\n      }));\n    });\n    let message, type;\n    type = '';\n\n    if (this.state.score > this.state.CPUscore) {\n      message = \"You Win!\";\n      type = \"success\";\n    }\n\n    if (this.state.score === this.state.CPUscore) {\n      message = \"You Tie!\";\n      type = \"warning\";\n    }\n\n    if (this.state.CPUscore === 0) {\n      message = \"\";\n      type = \"\";\n    }\n\n    if (this.state.score === 21) {\n      message = \"Blackjack!\";\n      type = \"success\";\n    }\n\n    if (this.state.score > 21 || this.state.score < this.state.CPUscore) {\n      message = \"You Lose!\";\n      type = \"danger\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"WAR (FOR THE BOYS AND THE GIRLS)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"War is a super fun classic game you can play by yourself with yourself (like Ethan does with his confessions identity yeye).\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 35\n      }\n    }, \"Return home!\"))), deck, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      disabled: this.state.dealDisable,\n      onClick: this.deal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, \"Deal!\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, \"Start over!\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      disabled: this.state.cpuDisable,\n      onClick: () => {\n        this.playCPU();\n        this.playCPU();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Play CPU!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }), \"\\xA0 Score: \", this.state.score, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), CPU, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }\n    }), \"\\xA0 CPU score: \", this.state.CPUscore, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Alert, {\n      variant: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, message));\n  }\n\n}\n\nexport default War;","map":{"version":3,"sources":["/Users/lucaspao/Documents/succotash/fantastic-succotash/src/War.js"],"names":["React","Card","club","diamond","heart","spade","Link","Button","Alert","Jumbotron","War","Component","constructor","props","deal","random","card","deck","state","CPU","cardsDealt","i","Math","floor","includes","suit","suits","number","values","slice","concat","setState","dealDisable","reset","render","map","index","message","type","score","CPUscore","cpuDisable","playCPU"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card} from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\nimport { Button, Alert, Jumbotron } from 'react-bootstrap';\n\nclass War extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        suits: [club, diamond, heart, spade],\n        values: [\"A\",2,3,4,5,6,7,8,9,10,\"J\",\"Q\",\"K\"],\n        deck: [],\n        CPU: [],\n        cardsDealt: [],\n        dealDisable: false\n    };\n  }\n\n  deal = () => {\n    let random;\n    let card;\n    let deck = this.state.deck;\n    let CPU = this.state.CPU;\n    let cardsDealt = this.state.cardsDealt;\n    for(let i = 0; i < 52; i++) {\n        random = Math.floor(Math.random() * 52);\n        while(cardsDealt.includes(random)) {\n            random = Math.floor(Math.random() * 52);\n        }\n        card = {\n            suit: this.state.suits[random % 4],\n            number: this.state.values[random % 13],\n        }\n        \n        cardsDealt = cardsDealt.slice().concat(random)\n        this.setState({cardsDealt})\n\n        if(i < 26) {\n            deck = deck.slice().concat(card)\n            this.setState({deck})\n        } else {\n            CPU = CPU.slice().concat(card)\n            this.setState({CPU})\n        }\n    }\n    this.setState({dealDisable: true})\n  }\n\n  reset = () => {\n    this.setState({cardsDealt: [], deck: [], CPU: []})\n  }\n\n  render(){\n    const deck = this.state.deck.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    const CPU = this.state.CPU.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    let message, type;\n    type = ''\n    if(this.state.score > this.state.CPUscore) {\n      message = \"You Win!\"\n      type = \"success\"\n    }\n    if(this.state.score === this.state.CPUscore) {\n      message = \"You Tie!\"\n      type = \"warning\"\n    }\n    if(this.state.CPUscore === 0) {\n      message = \"\"\n      type = \"\"\n    }\n    if(this.state.score === 21) {\n      message = \"Blackjack!\"\n      type = \"success\"\n    }\n    if(this.state.score > 21 || this.state.score < this.state.CPUscore) {\n      message = \"You Lose!\"\n      type = \"danger\"\n    }\n\n    return(\n        <div>\n        <Jumbotron>\n          <h1>WAR (FOR THE BOYS AND THE GIRLS)</h1>\n          <p>\n            War is a super fun classic game you can play by yourself with yourself (like Ethan does with his confessions identity yeye).\n          </p>\n          <Button variant=\"light\"><Link to=\"/\">Return home!</Link></Button>\n        </Jumbotron>\n            {deck}\n            <br/><br/>\n            <div> &nbsp;\n              <Button variant=\"primary\" disabled={this.state.dealDisable} onClick={this.deal}>Deal!</Button>{' '}\n              <Button variant=\"danger\" onClick={this.reset}>Start over!</Button>{' '}\n              <Button variant=\"info\" disabled={this.state.cpuDisable} onClick={()=>{ this.playCPU(); this.playCPU(); }}>Play CPU!</Button>\n              <br/>\n              &nbsp; Score: {this.state.score}\n              <br/>\n            </div>\n            <br/>\n            {CPU}\n            <br/><br/>\n            &nbsp; CPU score: {this.state.CPUscore}\n            <br/>\n            <Alert variant={type}>{message}</Alert>\n        </div>\n\n    );\n  }\n}\n\nexport default War;\n"]},"metadata":{},"sourceType":"module"}