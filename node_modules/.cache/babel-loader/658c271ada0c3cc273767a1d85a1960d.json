{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js\";\nimport React from 'react';\nimport { Card } from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\nimport { Button, Alert, Jumbotron } from 'react-bootstrap';\n\nclass Blackjack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deal = () => {\n      let random = Math.floor(Math.random() * 52);\n      let card = {\n        suit: this.state.suits[random % 4],\n        number: this.state.values[random % 13]\n      };\n      const deck = this.state.deck.slice().concat(card);\n      this.setState({\n        deck,\n        cpuDisable: false\n      });\n      let addScore = 0;\n\n      if (random % 13 < 9) {\n        addScore = random % 13 + 1;\n      } else {\n        addScore = 10;\n      }\n\n      this.setState({\n        score: this.state.score + addScore\n      });\n\n      if (this.state.score + addScore > 21) {\n        this.setState({\n          hitDisable: true\n        });\n      }\n\n      console.log(this.state.score);\n    };\n\n    this.playCPU = () => {\n      let random1 = Math.floor(Math.random() * 52);\n      let random2 = Math.floor(Math.random() * 52);\n      const deck = this.state.CPU.slice().concat({\n        suit: this.state.suits[random1 % 4],\n        number: this.state.values[random1 % 13]\n      }, {\n        suit: this.state.suits[random2 % 4],\n        number: this.state.values[random2 % 13]\n      });\n      this.setState({\n        CPU: deck,\n        hitDisable: true,\n        cpuDisable: true\n      });\n\n      if (random1 % 13 < 9) {\n        if (random2 % 13 < 9) {\n          this.setState({\n            CPUscore: this.state.CPUscore + random1 % 13 + random2 % 13 + 2\n          });\n        } else {\n          this.setState({\n            CPUscore: this.state.CPUscore + random1 % 13 + 11\n          });\n        }\n      } else {\n        if (random2 % 13 < 9) {\n          this.setState({\n            CPUscore: this.state.CPUscore + random2 % 13 + 11\n          });\n        } else {\n          this.setState({\n            CPUscore: this.state.CPUscore + 20\n          });\n        }\n      }\n    };\n\n    this.reset = () => {\n      this.setState({\n        deck: [],\n        CPU: [],\n        score: 0,\n        CPUscore: 0,\n        hitDisable: false,\n        cpuDisable: true\n      });\n    };\n\n    this.state = {\n      suits: [club, diamond, heart, spade],\n      values: [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\"],\n      deck: [],\n      CPU: [],\n      score: 0,\n      CPUscore: 0,\n      hitDisable: false,\n      cpuDisable: true\n    };\n  }\n\n  render() {\n    const deck = this.state.deck.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }));\n    });\n    const CPU = this.state.CPU.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }));\n    });\n    let message, type;\n    type = '';\n\n    if (this.state.score > this.state.CPUscore) {\n      message = \"You Win!\";\n      type = \"success\";\n    }\n\n    if (this.state.score === this.state.CPUscore) {\n      message = \"You Tie!\";\n      type = \"warning\";\n    }\n\n    if (this.state.CPUscore === 0) {\n      message = \"\";\n      type = \"\";\n    }\n\n    if (this.state.score === 21) {\n      message = \"Blackjack!\";\n      type = \"success\";\n    }\n\n    if (this.state.score > 21 || this.state.score < this.state.CPUscore) {\n      message = \"You Lose!\";\n      type = \"danger\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Jumbotron, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, \"Blackjack (FOR THE BOYS AND THE GIRLS)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, \"Blackjack is a super fun classic game you can play by yourself.\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 35\n      }\n    }, \"Return home!\"))), deck, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, \" \\xA0\", /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      disabled: this.state.hitDisable,\n      onClick: this.deal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Hit!\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, \"Start over!\"), ' ', /*#__PURE__*/React.createElement(Button, {\n      variant: \"info\",\n      disabled: this.state.cpuDisable,\n      onClick: () => {\n        this.playCPU();\n        this.playCPU();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 15\n      }\n    }, \"Play CPU!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }), \"\\xA0 Score: \", this.state.score, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), CPU, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 18\n      }\n    }), \"\\xA0 CPU score: \", this.state.CPUscore, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Alert, {\n      variant: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, message));\n  }\n\n}\n\nexport default Blackjack;","map":{"version":3,"sources":["/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js"],"names":["React","Card","club","diamond","heart","spade","Link","Button","Alert","Jumbotron","Blackjack","Component","constructor","props","deal","random","Math","floor","card","suit","state","suits","number","values","deck","slice","concat","setState","cpuDisable","addScore","score","hitDisable","console","log","playCPU","random1","random2","CPU","CPUscore","reset","render","map","index","message","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card} from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\nimport { Button, Alert, Jumbotron } from 'react-bootstrap';\n\nclass Blackjack extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        suits: [club, diamond, heart, spade],\n        values: [\"A\",2,3,4,5,6,7,8,9,10,\"J\",\"Q\",\"K\"],\n        deck: [],\n        CPU: [],\n        score: 0,\n        CPUscore: 0,\n        hitDisable: false,\n        cpuDisable: true,\n    };\n  }\n\n  deal = () => {\n    let random = Math.floor(Math.random() * 52);\n    let card = {\n        suit: this.state.suits[random % 4],\n        number: this.state.values[random % 13],\n    }\n    const deck = this.state.deck.slice().concat(card)\n    this.setState({deck, cpuDisable: false})\n    let addScore = 0;\n\n    if(random % 13 < 9) {\n      addScore = random % 13 + 1\n    }\n    else {\n      addScore = 10\n    }\n\n    this.setState({score: this.state.score + addScore})\n\n    if(this.state.score + addScore > 21) {\n      this.setState({hitDisable: true})\n    }\n    console.log(this.state.score)\n  }\n\n  playCPU = () => {\n    let random1 = Math.floor(Math.random() * 52);\n    let random2 = Math.floor(Math.random() * 52);\n    const deck = this.state.CPU.slice().concat(\n      { suit: this.state.suits[random1 % 4], number: this.state.values[random1 % 13] },\n      { suit: this.state.suits[random2 % 4], number: this.state.values[random2 % 13] }\n    )\n    this.setState({CPU: deck, hitDisable: true, cpuDisable: true})\n\n    if(random1 % 13 < 9) {\n      if(random2 % 13 < 9) {\n        this.setState({CPUscore: this.state.CPUscore + random1 % 13 + random2 % 13 + 2})\n      }\n      else {\n        this.setState({CPUscore: this.state.CPUscore + random1 % 13 + 11})\n      }\n    }\n    else {\n      if(random2 % 13 < 9) {\n        this.setState({CPUscore: this.state.CPUscore + random2 % 13 + 11})\n      }\n      else {\n        this.setState({CPUscore: this.state.CPUscore + 20})\n      }\n    }\n  }\n\n  reset = () => {\n    this.setState({deck: [], CPU: [], score: 0, CPUscore: 0, hitDisable: false, cpuDisable: true})\n  }\n\n  render(){\n    const deck = this.state.deck.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    const CPU = this.state.CPU.map((card, index) => {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    })\n\n    let message, type;\n    type = ''\n    if(this.state.score > this.state.CPUscore) {\n      message = \"You Win!\"\n      type = \"success\"\n    }\n    if(this.state.score === this.state.CPUscore) {\n      message = \"You Tie!\"\n      type = \"warning\"\n    }\n    if(this.state.CPUscore === 0) {\n      message = \"\"\n      type = \"\"\n    }\n    if(this.state.score === 21) {\n      message = \"Blackjack!\"\n      type = \"success\"\n    }\n    if(this.state.score > 21 || this.state.score < this.state.CPUscore) {\n      message = \"You Lose!\"\n      type = \"danger\"\n    }\n\n    return(\n        <div>\n        <Jumbotron>\n          <h1>Blackjack (FOR THE BOYS AND THE GIRLS)</h1>\n          <p>\n            Blackjack is a super fun classic game you can play by yourself.\n          </p>\n          <Button variant=\"light\"><Link to=\"/\">Return home!</Link></Button>\n        </Jumbotron>\n            {deck}\n            <br/><br/>\n            <div> &nbsp;\n              <Button variant=\"primary\" disabled={this.state.hitDisable} onClick={this.deal}>Hit!</Button>{' '}\n              <Button variant=\"danger\" onClick={this.reset}>Start over!</Button>{' '}\n              <Button variant=\"info\" disabled={this.state.cpuDisable} onClick={()=>{ this.playCPU(); this.playCPU(); }}>Play CPU!</Button>\n              <br/>\n              &nbsp; Score: {this.state.score}\n              <br/>\n            </div>\n            <br/>\n            {CPU}\n            <br/><br/>\n            &nbsp; CPU score: {this.state.CPUscore}\n            <br/>\n            <Alert variant={type}>{message}</Alert>\n        </div>\n\n    );\n  }\n}\n\nexport default Blackjack;\n"]},"metadata":{},"sourceType":"module"}