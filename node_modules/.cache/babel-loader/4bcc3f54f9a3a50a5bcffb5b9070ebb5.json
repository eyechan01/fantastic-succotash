{"ast":null,"code":"var _jsxFileName = \"/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js\";\nimport React from 'react';\nimport Card from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nclass Blackjack extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deal = () => {\n      let randomSuit = Math.floor(Math.random() * 4);\n      let randomValue = Math.floor(Math.random() * 13);\n      let card = {\n        suit: this.state.suits[randomSuit],\n        number: this.state.values[randomValue]\n      };\n      const deck = this.state.deck.slice().concat(card);\n      this.setState({\n        deck\n      });\n      typeof card.number === \"number\" ? this.setState({\n        score: this.state.score + card.number\n      }) : card.number === \"A\" ? this.setState({\n        score: this.state.score + 1\n      }) : this.setState({\n        score: this.state.score + 10\n      });\n    };\n\n    this.reset = () => {\n      this.setState({\n        deck: [],\n        score: 0\n      });\n    };\n\n    this.state = {\n      suits: [club, diamond, heart, spade],\n      values: [2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\", \"A\"],\n      deck: [],\n      score: 0\n    };\n  }\n\n  render() {\n    const deck = this.state.deck.map((card, index) => {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        suit: card.suit,\n        number: card.number,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }));\n    });\n    let score = this.state.score;\n\n    if (score == 21) {\n      score = \"Blackjack!\";\n    }\n\n    if (score > 21) {\n      score = \"You Lose!\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, deck, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.deal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Hit!\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.reset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Start over!\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), \"Score: \", score, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \"Go home!\")));\n  }\n\n}\n\nexport default Blackjack;","map":{"version":3,"sources":["/Users/lucaspao/Documents/succotash/fantastic-succotash/src/Blackjack.js"],"names":["React","Card","club","diamond","heart","spade","Link","Blackjack","Component","constructor","props","deal","randomSuit","Math","floor","random","randomValue","card","suit","state","suits","number","values","deck","slice","concat","setState","score","reset","render","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Card from './Card';\nimport club from './club.jpg';\nimport diamond from './diamond.jpg';\nimport heart from './heart.jpg';\nimport spade from './spade.jpg';\nimport { Link } from 'react-router-dom';\n\nclass Blackjack extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        suits: [club, diamond, heart, spade],\n        values: [2,3,4,5,6,7,8,9,10,\"J\",\"Q\",\"K\",\"A\"],\n        deck: [],\n        score: 0,\n    };\n  }\n\n  deal = () => {\n    let randomSuit = Math.floor(Math.random() * 4);\n    let randomValue = Math.floor(Math.random() * 13);\n    let card = {\n        suit: this.state.suits[randomSuit],\n        number: this.state.values[randomValue],\n    }\n    const deck = this.state.deck.slice().concat(card)\n    this.setState({deck})\n\n    typeof(card.number) === \"number\" ?\n      this.setState({score: this.state.score + card.number}) :\n      (\n        card.number === \"A\" ?\n        this.setState({score: this.state.score + 1}) : this.setState({score: this.state.score + 10})\n      )\n  }\n\n  reset = () => {\n    this.setState({deck: [], score: 0})\n  }\n\n  render(){\n    const deck = this.state.deck.map((card, index) =>\n    {\n      return (\n        <span key = {index}>\n          <Card suit = {card.suit} number = {card.number}/>\n        </span>\n      );\n    }\n  )\n\n  let score = this.state.score\n  if(score == 21) {\n    score = \"Blackjack!\"\n  }\n  if(score > 21) {\n    score = \"You Lose!\"\n  }\n\n    return(\n        <div>\n            {deck}\n            <br/><br/><br/><br/>\n            <div>\n              <button onClick={this.deal}>Hit!</button>\n              <button onClick={this.reset}>Start over!</button>\n              <br/>\n              Score: {score}\n              <br/>\n              <Link to=\"/\">Go home!</Link>\n            </div>\n        </div>\n\n    );\n  }\n}\n\nexport default Blackjack;\n"]},"metadata":{},"sourceType":"module"}